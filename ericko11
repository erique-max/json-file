import json
import re
import random_responses


# Load JSON data
def load_json(file):
    with open(file) as bot_responses:
        print(f"Loaded '{file}' successfully!")
        return json.load(bot_responses)


# Store JSON data
response_data = load_json("bot.json")


def get_response(input_string):
    split_message = re.split(r'\s+|[,;?!.-]\s*', input_string.lower())
    score_list = []

    # Check all the responses
    for response in response_data:
        response_score = 0
        required_score = 0
        required_words = response["required_words"]

        # Check if there are any required words
        if required_words:
            for word in split_message:
                if word in required_words:
                    required_score += 1

        # Amount of required words should match the required score
        if required_score == len(required_words):
            # print(required_score == len(required_words))
            # Check each word the user has typed
            for word in split_message:
                # If the word is in the response, add to the score
                if word in response["user_input"]:
                    response_score += 1

        # Add score to list
        score_list.append(response_score)
        # Debugging: Find the best phrase
        # print(response_score, response["user_input"])

    # Find the best response and return it if they're not all 0
    best_response = max(score_list)
    response_index = score_list.index(best_response)

    # Check if input is empty
    if input_string == "":
        return "Please type something so we can chat :("

    # If there is no good response, return a random one.
    if best_response != 0:
        return response_data[response_index]["bot_response"]

    return random_responses.random_string()


while True:
    user_input = input("You: ")
    print("Bot:", get_response(user_input))
[
  {
    "response_type": "greeting",
    "user_input": ["hello", "hi", "hey"],
    "bot_response": "Hey there!",
    "required_words": []
  },

  {
    "response_type": "greeting",
    "user_input": ["see you", "goodbye", "bye"],
    "bot_response": "See you later!",
    "required_words": []
  },

  {
    "response_type": "question",
    "user_input": ["define","deep learning"],
    "bot_response": "Deep learning is a subfield of machine learning  that focuses on building and training artificial neural networks to learn and make predictions from data.It is inspired by the structure and function of the human brain",
    "required_words": ["definition", "deep learning"]
  },

  {
    "response_type": "question",
    "user_input": ["briefly","explain","AI"],
    "bot_response": "AI is the reproduction of human reasoning and intelligent behavior by computational methods ",
    "required_words": ["explain", "AI"]
  },

  {
    "response_type": "question",
    "user_input": ["distinguish","between","a","contradiction","tautology","and","consequent"],
    "bot_response": " A contradiction is a statement or proposition that is logically inconsistent, meaning it asserts both a statement and its negation simultaneously",
    "bot_response":" A tautology is a statement that is always true, regardless of the truth values of its components",
   "bot_response":"Consequent In logic, the consequent refers to the second part of a conditional statement",
   "required_words": ["distinguish", "contradiction","tautology","consequent"]
  },

  {
    "response_type": "question",
    "user_input": ["differentiate","between","forward chaining","backward chaining"],
    "bot_response": "Forwad chaining is a data-driven approach. We start from available information as it becomes available and then we draw conclusions. The ES analyzes the problem by looking for the facts that match the IF part of the rules",
    "bot_response":"Backward chaining is a goal driven approach in which you start from an expectation of what is going to happen(hypothesis) and then seek evidence that support (or contradicts) the expectation. This entails formulating sub-goals and evaluating them", 
    "required_words": ["forward chaining","backward chaining"]
  },

{
    "response_type": "question",
    "user_input": ["make","short notes","on","introduction","to","AI"],
    "bot_response": " Artificial Intelligence (AI) is the simulation of human intelligence processes by machines, including learning, reasoning, and problem-solving",
     "bot_response":"It encompasses various subfields like machine learning, natural language processing, computer vision, and robotics",
     "bot_response":"AI finds applications across sectors such as healthcare, finance, transportation, and entertainment, revolutionizing industries and daily life",
    "bot_response":" Ethical considerations, including bias, privacy, and job displacement, are critical in AI development and deployment",
     "bot_response":"AI's future holds promise for transformative advancements but requires careful navigation of societal, ethical, and technical challenges.",
    "required_words": ["short notes","on","introduction","AI"]
  }
import random


def random_string():
    random_list = [
        "Please try writing something more descriptive.",
        "Oh! It appears you wrote something I don't understand yet",
        "Do you mind trying to rephrase that?",
        "I'm terribly sorry, I didn't quite catch that.",
        "I can't answer that yet, please try asking something else."
    ]

    list_count = len(random_list)
    random_item = random.randrange(list_count)

    return random_list[random_item]
]

